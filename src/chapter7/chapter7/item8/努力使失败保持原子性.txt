                                                        努力使失败保持原子性


当对象抛出异常之后，总是期望这个对象仍然保持在一种良好的可用状态之中，即使失败发生在执行某个操作的过程中间。
对于受查异常而言，这尤为重要，因为调用者会期望能从这种异常中恢复过来。
一般而言，失败的方法调用应该使对象保持在被调用之前的状态。具有这种性质的方法被称为具有失败原子性。

方法获得失败原子性的方式有：
1，使用不可变对象。
2，对于在可变对象上执行操作的方法，在执行操作之前检查参数的有效性。这可以使得在对象的状态被修改之前，先抛出适当的异常。
类似的，也可以调整方法的计算处理过程的顺序，使得任何可能会失败的计算部分都在对象状态被修改之前发生。
3，编写一段恢复代码。由它来拦截操作过程中发生的失败，以及使对象回滚到操作开始之前的状态上。
这种方法不常用，主要用于永久性的（基于磁盘的）数据结构。
4，在对象的临时拷贝上执行操作，当操作完成之后，再把临时拷贝中的结果复制给原来的对象。

错误（相对于异常）通常是不可恢复的，当方法抛出错误时，它们不需要努力保持失败原子性。
