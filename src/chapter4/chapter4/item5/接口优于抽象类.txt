                                                                                                                接口优于抽象类

接口是定义mixin(混合类型)的理想选择。

通过对导出的每一个重要接口都提供一个抽象的骨架实现类，把接口和抽象类的优点结合起来。
接口的作用仍然是定义类型，但是骨架实现类接管了所有与接口实现相关的工作。
按照惯例，骨架实现类被称为AbstractInterface，Interface是所实现的接口的名字。

骨架实现的优美之处在于，它们为抽象类提供了实现上的帮助，但又不强加“抽象类被用作类型定义时”所特有的严格限制。
对于接口的大多数实现来讲，扩展骨架实现类是很显然的选择，但并不是必需的。如果一个已经预先定义好的类无法扩展骨架实现类，那么直接手工实现接口就行了。
此外，骨架实现类仍然能够有助于接口的实现。实现了这个接口的类可以把对于接口方法的调用，转发到一个内部私有类的实例上，而这个内部私有类扩展了骨架实现类。
这被称为模拟多重继承，它具有多重继承的绝大多数优点，并且避免了相应的缺陷。示例见 chapter4.item5.SimulatedMultipleInheritanceDemo。
