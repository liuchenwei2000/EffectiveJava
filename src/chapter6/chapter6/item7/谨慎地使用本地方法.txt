                                                          谨慎地使用本地方法

Java Native Interface(JNI)允许Java应用程序可以调用本地方法（native method）。所谓本地方法是指用本地程序设计语言（C或者C++）来编写的特殊方法。

本地方法主要有三种用途：
1，提供了访问特定于平台的机制，比如访问注册表和文件锁。
2，提供了访问遗留代码库和遗留数据的能力。
3，本地方法通过本地语言，编写应用程序中注重性能的部分，以提高系统的性能。

使用本地方法来提高性能的做法越来越不值得提倡，因为JVM实现变得越来越快了，对于大多数任务，现在即使不使用本地方法也可以获得与之相当的性能。

使用本地方法有一些严重的缺点：
1，不再免受内存毁坏错误的影响。
2，因为本地语言是平台相关的，使用本地方法的应用程序也不再是可自由移植的。
3，在进入和退出本地代码时，需要相关的固定开销。
4，难以调试。

现在，极少情况下需要使用本地方法来提高性能。