                                                                  用 emum 代替 int 常量


枚举类型（enum type）是指由一组固定的常量组成合法值的类型。Java的枚举类型是功能十分齐全的类，枚举本质上是 int 值。
枚举类实际上是通过公有的静态 final 域为每个枚举常量导出实例的类，因为没有可访问的构造器，所以是真正的final。同时也是实例受控的（多例模式）。

枚举提供了编译时的类型安全。包含同名常量的多个枚举类型可以在一个系统中和平共处，因为每个类型都有自己的命名空间。
可以增加或者重新排列枚举类型中的常量，而无需重新编译它的客户端代码，因为常量值并没有被编译到客户端代码中。
可以通过 toString 方法，将枚举转换成可打印的字符串。

枚举类型允许添加任意的方法和域，并实现任意的接口，它提供了所有 Object 方法的高级实现，
实现了 Comparable 和 Serializable 接口，并针对枚举类型的可任意改变性设计了序列化方式。
枚举类型可以先作为枚举常量的一个简单集合，随着时间的推移再演变成为全功能的抽象。

如果一个枚举具有普遍适用性，它就应该成为一个顶层类，如果只是被用在一个特定的顶层类中，它就应该成为顶层内的内部类。
