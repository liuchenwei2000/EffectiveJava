                                                                             遵守普遍接受的命名惯例


1，包的名称应该是层次状的，用句号分隔每个部分。每个部分包括小写字母和数字（很少使用）。
任何将在你的组织之外使用的包，其名称都应该以你的组织的 Internet 域名开头，并且顶级域名放在前面，例如 com.sun。
标准库和一些可选的库，其名称以java和javax作为开头，它们是这条规则的例外，用户创建的包名不应该以java和javax开头。

包名称的剩余部分应该包括一个或者多个描述该包的组成部分。这些组成部分应该比较简短，通常不超过8个字符。
鼓励使用有意义的缩写形式，例如 util 代替 utilities。只取首字母的缩写形式也是可以接受的，例如awt。
每一个组成部分通常都应该由一个单词或者缩写词组成。

2，类和接口；的名称都应该包括一个或者多个单词，每个单词的首字母大写。应该尽量避免用缩写，除非是一些首字母缩写和一些通用的缩写。
对于首字母缩写，到底应该全部大写还是只有首字母大写，没有统一的说法，建议采用仅仅首字母大写的形式。
这样即使多个首字母缩写形式连续出现，仍然可以区分开一个单词的起始处和结束处。

类或枚举通常用一个名词或者名词短语命名，如Timer，接口的命名与类相似，如Comparator，或者用一个以"-able"或"-ible"结尾的形容词来命名，例如Runnable。
由于 annotation 类型有多种用处，因此没有单独安排词类，名词、动词、介词和形容词都很常用。

3，方法和域的名称与类和接口的名称一样，都遵守相同的惯例，只不过方法或者域的名称第一个字母应该小写。
如果由首字母缩写组成的单词是一个方法或者域名称的第一个单词，它就应该是小写形式。
唯一的例外是常量域，它的名称应该包含一个或者多个大写形式的单词，中间由下划线符号分隔开，例如INT_VALUES。

局部变量名称的字面命名惯例与成员名称类似，只不过它也允许缩写，单个字符和短字符序列的意义取决于局部变量所在的上下文环境。
类型参数（泛型）名称通常由单个字母组成，这个字母通常是：
T 表示任意的类型，E 表示集合的元素类型，K 和 V 表示映射的键/值类型，X 表示异常。

执行某个动作的方法通常用动词或者动词短语来命名；对于返回 boolean 值的方法，其名称往往以单词"is"开头，后面跟一个名词或名词短语，或者任何具有形容词功能的单词或短语。
如果方法返回被调用对象的一个非 boolean 的函数或者属性，通常用名词、名词短语，或者以动词"get"开头的动词短语来命名。比如size、hashCode或者getTime。
如果方法所在的类是个 JavaBean，则要强制使用以"get"开头的形式；如果这个类包含一个方法用于设置同样的属性，则建议采用这种形式：getAttribute和setAttribute。

转换对象类型的方法、返回不同类型的独立对象的方法，通常被称为 toType，例如 toString 和 toArray。
返回视图（视图的类型不同于接收对象的类型）的方法通常被称为 asType，例如 asList。
返回一个与被调用对象同值的基本类型的方法，通常被称为 typeValue，例如 intValue。
静态工厂的常用名称为  valueOf、of、newInstanc 和 getInstance。
