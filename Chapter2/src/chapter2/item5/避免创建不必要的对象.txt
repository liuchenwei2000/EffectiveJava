                                                                                        避免创建不必要的对象


如果一个对象是不可变的(immutable)，那么它总是可以被重用。
对于同时提供了静态工厂方法和构造函数的不可变类，通常可以利用静态工厂方法而不是构造函数，以避免创建重复的对象。
比如Boolean.valueOf(String)几乎总是优于构造函数Boolean(String)。

除了重用不可变的对象之外，也可以重用那些已知不会被修改的可变对象，比如 Calendar 对象，它们的值一旦计算出来就不会再变化。
示例见ReuseMutableDemo.java

一个适配器对象除了要适配的对象之外，没有其他的状态信息，所以针对某个给定对象的特定适配器而言，它不需要创建多个适配器实例。
另外要优先使用基本类型而不是装箱基本类型，要当心无意识的自动装箱。

通过维护自己的对象池(object pool)来避免对象的创建工作并不是一个好的做法，除非池中的对象是非常重量级的。
真正正确使用对象池的典型例子就是数据库连接池，因为数据库连接的代价是非常昂贵的。
一般而言，维护自己的对象池会把代码弄得很乱，增加内存占用，并且还会损害性能。
现代的JVM实现有高度优化的垃圾回收器，其性能很容易就会超过轻量级对象池的性能。
