                                                          优先使用标准的异常


Java 平台类库提供了一组基本的非受查异常，它们满足了绝大多数 API 异常抛出需要。

重用现有异常有以下这些好处：
1，使得 API 更加易于学习和使用，因为它与程序员已经熟悉的习惯用法保持一致。
2，对于用到这些 API 的程序而言，它们的可读性更好，因为不会出现多数程序员不熟悉的异常。
3，异常类越少，意味着内存占用越小，装载这些类的时间开销也越小。


常用的异常

IllegalArgumentException  
当调用者传递的参数值不合适的时候抛出。
IllegalStateException
当因为接收对象的状态而导致方法被非法调用时抛出，比如某个对象尚未正确初始化之前就被调用者使用时。
NullPointException
当调用者在某个不允许 null 值的参数中传递了 null 时抛出。
IndexOutOfBoundsException
当调用者在表示序列索引的参数中传递了越界的值时抛出。
UnsupportedOperationException
当对象不支持所请求的操作时抛出，比如接口的某个实现类没有实现接口所定义的某个可选操作。
ConcurrentModificationException
当对象被设计为专用于单线程或者与外部同步机制配合使用，一旦发现它正在（或已经）被并发地修改时抛出。

一定要确保抛出异常的情况与该异常的文档中描述的情况一致。这种重用必须建立在语义的基础上，而不是名字的基础上。
而且，如果希望增加更多的失败信息，则可以对现有的异常进行子类化。
